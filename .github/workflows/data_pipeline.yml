name: Weather Data Pipeline Workflow

# Define when this workflow runs
on:
  # Run on push to main branch
  push:
    branches: [ main ]

  # Allow manual triggering
  workflow_dispatch:

  # TESTING: Run every 10 minutes (more reliable than 5 minutes)
  # For daily: '35 0 * * *' (12:35 AM UTC / 7:35 AM Toronto time)
  schedule:
    - cron: '*/10 * * * *'

# Prevent multiple workflows from running simultaneously
concurrency:
  group: weather-pipeline
  cancel-in-progress: false

jobs:
  run-weather-pipeline:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout repository content
    - name: Checkout repo content
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: Run weather data pipeline
    - name: Run weather data pipeline
      run: |
        python data_pipeline.py
    
    # Step 5: Check for changes and commit
    - name: Check for changes and commit
      run: |
        git config --local user.name 'github-actions[bot]'
        git config --local user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Automated weather data update - $(date '+%Y-%m-%d %H:%M:%S')"
          git push
        fi
